// @generated
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Request {
    #[prost(string, tag="1")]
    pub input: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Response {
    #[prost(string, tag="1")]
    pub output: ::prost::alloc::string::String,
}
/// Encoded file descriptor set for the `sf.mycustomer.v1` package
pub const FILE_DESCRIPTOR_SET: &[u8] = &[
    0x0a, 0xab, 0x05, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x79, 0x63, 0x75, 0x73,
    0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73, 0x66, 0x2e,
    0x6d, 0x79, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x1f, 0x0a,
    0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
    0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x22,
    0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
    0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
    0x75, 0x74, 0x32, 0x4b, 0x0a, 0x03, 0x45, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x09, 0x54, 0x72, 0x61,
    0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x66, 0x2e, 0x6d, 0x79, 0x63, 0x75,
    0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
    0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x66, 0x2e, 0x6d, 0x79, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
    0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x4a,
    0xe4, 0x03, 0x0a, 0x06, 0x12, 0x04, 0x00, 0x00, 0x13, 0x01, 0x0a, 0x08, 0x0a, 0x01, 0x0c, 0x12,
    0x03, 0x00, 0x00, 0x12, 0x0a, 0xd4, 0x01, 0x0a, 0x01, 0x02, 0x12, 0x03, 0x07, 0x00, 0x19, 0x32,
    0xc9, 0x01, 0x20, 0x72, 0x75, 0x6e, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x67, 0x6f, 0x20, 0x69, 0x6e,
    0x73, 0x74, 0x61, 0x6c, 0x6c, 0x20, 0x2d, 0x76, 0x20, 0x2e, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x73,
    0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x20, 0x26, 0x26, 0x20, 0x73, 0x75, 0x62,
    0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x20, 0x64, 0x79, 0x6e, 0x67, 0x72, 0x70, 0x63, 0x0a,
    0x20, 0x74, 0x68, 0x65, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x6e, 0x6f, 0x74, 0x68, 0x65,
    0x72, 0x20, 0x74, 0x61, 0x62, 0x2c, 0x20, 0x72, 0x75, 0x6e, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x67,
    0x72, 0x70, 0x63, 0x75, 0x72, 0x6c, 0x20, 0x2d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78,
    0x74, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x20, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72,
    0x6f, 0x74, 0x6f, 0x20, 0x2d, 0x64, 0x20, 0x27, 0x7b, 0x22, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22,
    0x3a, 0x20, 0x22, 0x62, 0x6f, 0x6f, 0x31, 0x32, 0x33, 0x22, 0x7d, 0x27, 0x20, 0x6c, 0x6f, 0x63,
    0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x37, 0x38, 0x37, 0x38, 0x20, 0x73, 0x66, 0x2e, 0x6d,
    0x79, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68,
    0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x0a, 0x0a, 0x0a, 0x0a, 0x02, 0x06,
    0x00, 0x12, 0x04, 0x09, 0x00, 0x0b, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x06, 0x00, 0x01, 0x12, 0x03,
    0x09, 0x08, 0x0b, 0x0a, 0x0b, 0x0a, 0x04, 0x06, 0x00, 0x02, 0x00, 0x12, 0x03, 0x0a, 0x02, 0x33,
    0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x00, 0x01, 0x12, 0x03, 0x0a, 0x06, 0x0f, 0x0a, 0x0c,
    0x0a, 0x05, 0x06, 0x00, 0x02, 0x00, 0x02, 0x12, 0x03, 0x0a, 0x10, 0x17, 0x0a, 0x0c, 0x0a, 0x05,
    0x06, 0x00, 0x02, 0x00, 0x06, 0x12, 0x03, 0x0a, 0x22, 0x28, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00,
    0x02, 0x00, 0x03, 0x12, 0x03, 0x0a, 0x29, 0x31, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x00, 0x12, 0x04,
    0x0d, 0x00, 0x0f, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x00, 0x01, 0x12, 0x03, 0x0d, 0x08, 0x0f,
    0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x00, 0x12, 0x03, 0x0e, 0x02, 0x13, 0x0a, 0x0c, 0x0a,
    0x05, 0x04, 0x00, 0x02, 0x00, 0x05, 0x12, 0x03, 0x0e, 0x02, 0x08, 0x0a, 0x0c, 0x0a, 0x05, 0x04,
    0x00, 0x02, 0x00, 0x01, 0x12, 0x03, 0x0e, 0x09, 0x0e, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02,
    0x00, 0x03, 0x12, 0x03, 0x0e, 0x11, 0x12, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x01, 0x12, 0x04, 0x11,
    0x00, 0x13, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x01, 0x01, 0x12, 0x03, 0x11, 0x08, 0x10, 0x0a,
    0x0b, 0x0a, 0x04, 0x04, 0x01, 0x02, 0x00, 0x12, 0x03, 0x12, 0x02, 0x14, 0x0a, 0x0c, 0x0a, 0x05,
    0x04, 0x01, 0x02, 0x00, 0x05, 0x12, 0x03, 0x12, 0x02, 0x08, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x01,
    0x02, 0x00, 0x01, 0x12, 0x03, 0x12, 0x09, 0x0f, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x01, 0x02, 0x00,
    0x03, 0x12, 0x03, 0x12, 0x12, 0x13, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
];
// @@protoc_insertion_point(module)